# Generated by Django 4.2.21 on 2025-07-04 08:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import users.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(help_text='Provide an email for registration', max_length=320, unique=True)),
                ('name', models.CharField(blank=True, help_text='Full name of the user, optional.', max_length=70, null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True, help_text='The date and time this account was created.')),
                ('is_active', models.BooleanField(default=False, help_text='Flag to indicate if the user account is active.')),
                ('is_verified', models.BooleanField(default=False, help_text='Flag to indicate if the user account has been verified.')),
                ('is_staff', models.BooleanField(default=False, help_text='Flag to indicate if the user can access the admin site.')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', users.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(help_text='Description of the action performed.', max_length=255)),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address of the user at the time of the action.', null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='The exact date and time when the action was logged.')),
                ('user', models.ForeignKey(help_text='The user who performed the action.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
